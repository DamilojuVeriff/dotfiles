#!/usr/bin/env bash

echo "Setting up your Mac..."

DOTFILES=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)

# Check if Xcode Command Line Tools are installed
if ! xcode-select -p &>/dev/null; then
  echo "Xcode Command Line Tools not found. Installing..."
  xcode-select --install
else
  echo "Xcode Command Line Tools already installed."
fi

# Check for Oh My Zsh and install if we don't have it
if [ ! -d "$HOME/.oh-my-zsh" ]; then
  /bin/sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/HEAD/tools/install.sh)"
fi

# Check for Homebrew and install if we don't have it
if test ! "$(which brew)"; then
  /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

  echo 'eval "$(/opt/homebrew/bin/brew shellenv)"' >> $HOME/.zprofile
  eval "$(/opt/homebrew/bin/brew shellenv)"
fi

# Removes .zshrc from $HOME (if it exists) and symlinks the .zshrc file from the .dotfiles
rm -rf $HOME/.zshrc
ln -sw $DOTFILES/zsh/.zshrc $HOME/.zshrc

# Removes .p10k.zsh theme file from $HOME (if it exists) and symlinks the .p10k.zsh file from the .dotfiles
rm -rf $HOME/.p10k.zsh
ln -sw $DOTFILES/zsh/.p10k.zsh $HOME/.p10k.zsh

# remove and link .hushlogin
rm -rf $HOME/.hushlogin
ln -sw $DOTFILES/.hushlogin $HOME/.hushlogin

# Tmux
ln -sf $DOTFILES/tmux/tmux.conf $HOME/.tmux.conf

# Scripts
mkdir -p $HOME/.local/bin

ln -sf $DOTFILES/scripts/t $HOME/.local/bin/t

# NVIM
rm -rf $HOME/.config/nvim
ln -sw $DOTFILES/nvim $HOME/.config/nvim

# remove and link rabbitmq config
rm -rf /opt/homebrew/etc/rabbitmq/rabbitmq.conf
ln -sw $DOTFILES/rabbitmq/rabbitmq.conf /opt/homebrew/etc/rabbitmq/rabbitmq.conf

# Update Homebrew
brew update

# Install all our dependencies with bundle (See Brewfile)
brew bundle --file ./homebrew/Brewfile

# NVM (Node Version Manager)
mkdir -p $HOME/.nvm
ln -sf $DOTFILES/nvm/default-packages $HOME/.nvm/default-packages

# pyenv
mkdir -p $HOME/.pyenv
ln -sf $DOTFILES/pyenv $HOME/.pyenv

# Create a projects directories
mkdir -p $HOME/Code

